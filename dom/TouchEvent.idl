/*
 * Copyright (C) 2008, Apple Inc. All rights reserved.
 *
 * No license or rights are granted by Apple expressly or by implication,
 * estoppel, or otherwise, to Apple copyrights, patents, trademarks, trade
 * secrets or other rights.
 */

module events {

    interface [
        AppleCopyright
    ] TouchEvent : UIEvent {
        
        void initTouchEvent(in [Optional=DefaultIsUndefined] DOMString type, 
                            in [Optional=DefaultIsUndefined] boolean canBubble, 
                            in [Optional=DefaultIsUndefined] boolean cancelable,
                            in [Optional=DefaultIsUndefined] DOMWindow view,
                            in [Optional=DefaultIsUndefined] long detail,
                            in [Optional=DefaultIsUndefined] long screenX, 
                            in [Optional=DefaultIsUndefined] long screenY, 
                            in [Optional=DefaultIsUndefined] long clientX, 
                            in [Optional=DefaultIsUndefined] long clientY, 
                            in [Optional=DefaultIsUndefined] boolean ctrlKey, 
                            in [Optional=DefaultIsUndefined] boolean altKey, 
                            in [Optional=DefaultIsUndefined] boolean shiftKey, 
                            in [Optional=DefaultIsUndefined] boolean metaKey, 
                            in [Optional=DefaultIsUndefined] TouchList touches,
                            in [Optional=DefaultIsUndefined] TouchList targetTouches,
                            in [Optional=DefaultIsUndefined] TouchList changedTouches,
                            in [Optional=DefaultIsUndefined] float scale,
                            in [Optional=DefaultIsUndefined] float rotation);
                            
        readonly attribute TouchList touches;           // all touches
        readonly attribute TouchList targetTouches;     // all touches in this TouchEvent Target
        readonly attribute TouchList changedTouches;    // all touches changed in the current event

        readonly attribute float scale;      // distance (since event start) between fingers as multiplier of initial value. Initially 1.0, zoom out (pinch) < 1.0, zoom in > 1.0.
        readonly attribute float rotation;   // rotation delta (since event start) in degrees (clockwise is positive). Initially 0.0.

        readonly attribute boolean ctrlKey;
        readonly attribute boolean shiftKey;
        readonly attribute boolean altKey;
        readonly attribute boolean metaKey;
    };
}
